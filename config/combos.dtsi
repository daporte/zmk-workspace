/*                KEY POSITIONS

  ╭─────────────────────╮ ╭─────────────────────╮
  │ LT4 LT3 LT2 LT1 LT0 │ │ RT0 RT1 RT2 RT3 RT4 │
  │ LM4 LM3 LM2 LM1 LM0 │ │ RM0 RM1 RM2 RM3 RM4 │
  │ LB4 LB3 LB2 LB1 LB0 │ │ RB0 RB1 RB2 RB3 RB4 │
  ╰───────╮ LH2 LH1 LH0 │ │ RH0 RH1 RH2 ╭───────╯
          ╰─────────────╯ ╰─────────────╯ */

#define COMBO_TERM_FAST 18
#define COMBO_TERM_SLOW 30

#define COMBO_IDLE_FAST 150
#define COMBO_IDLE_SLOW 50


/* Horizontal combos - left hand */
ZMK_COMBO(qmark,   &kp QMARK,      15 16,     0 , COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(excl,   &kp EXCL,      14 15,     0 , COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(ret,   &kp RETURN,   LT2 LT1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(mouse, &smart_mouse, LT3 LT1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//
//// Combos overlapping HRMs are set up as hold-taps themselves to allow for instantaneous
//// chording of mods. Custom hold-tap instances can be bootstrapped on the go using the
//// 8-argument version of ZMK_COMBO defined in base.keymap.
//ZMK_COMBO(tab,   &hml LS(LALT)TAB, LM3 LM2, DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(ldr,   &leader,      LM2 LM1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST, LS(LCTRL),    KEYS_R)
//ZMK_COMBO(ldrsh, &leader_sft,  LM3 LM2 LM1, DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST, LS(LC(LALT)), KEYS_R)
//
//ZMK_COMBO(cut,   &kp LC(X),    LB3 LB1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(copy,  &kp LC(INS),  LB3 LB2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(paste, &kp LS(INS),  LB2 LB1,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//
///* Horizontal combos - right hand */
//ZMK_COMBO(bspc,  &kp BSPC,     RT1 RT2,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(del,   &kp DEL,      RT2 RT3,     DEF NAV NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//
//ZMK_COMBO(lpar,  &lpar_lt,     19 20,     0, COMBO_TERM_FAST, COMBO_IDLE_FAST, RS(LCTRL),    KEYS_L)
ZMK_COMBO(lbkt,  &kp LBKT,     7 8,     0, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbkt,  &kp RBKT,     8 9,     0, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(lpar,  &kp LPAR,     19 20,     0, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rpar,  &kp RPAR,     20 21,     0, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(lbrc,  &kp LBRC,     31 32,     0, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(rbrc,  &kp RBRC,     32 33,     0, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(lpar,  &kp AT,     19 20,     0, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(rpar,  &rpar_gt,     RM2 RM3,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST, RS(LALT),     KEYS_L)
//ZMK_COMBO(lt,    &kp LT,       RM1 RM2,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(gt,    &kp GT,       RM2 RM3,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
//
//ZMK_COMBO(lbkt,  &kp LBKT,     RB1 RB2,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(rbkt,  &kp RBKT,     RB2 RB3,     DEF     NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(lbrc,  &kp LBRC,     RB1 RB2,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
//ZMK_COMBO(rbrc,  &kp RBRC,     RB2 RB3,         NAV    , COMBO_TERM_FAST, COMBO_IDLE_FAST)
//
///* Vertical combos - left hand */
ZMK_COMBO(at,    &kp AT,       2 14,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(hash,  &kp HASH,     3 15,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(dllr,  &kp DLLR,     4 16,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(prcnt, &kp PRCNT,    5 17,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
//
ZMK_COMBO(grave, &kp GRAVE,    14 26,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(bslh,  &kp BSLH,     15 27,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(minus, &kp MINUS,    16 28,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(tilde, &kp TILDE,    17 29,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
//
///* Vertical combos - right hand */
ZMK_COMBO(caret, &kp CARET,    6 18,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(equal,  &kp EQUAL,     7 19,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(star,  &kp STAR,     8 20,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(amps,  &kp AMPS,     9 21,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)

ZMK_COMBO(plus, &kp PLUS,    18 30,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(under, &kp UNDER,    19 31,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(fslh,  &kp FSLH,     20 32,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
ZMK_COMBO(pipe,  &kp PIPE,     21 33,     0, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)



ZMK_COMBO(lalt,  &kp RALT,     0 12,     4, COMBO_TERM_SLOW, COMBO_IDLE_SLOW)
