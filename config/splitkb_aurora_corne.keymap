#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NAV     3
#define STENO   4
#define CZECH   5

#define HOST_OS 1

#include "zmk-helpers/helper.h"
#include "zmk-helpers/unicode-chars/czech.dtsi"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand

#include "combos.dtsi"  // must be sources after HRM-combo hack

#define MAKE_HRM(NAME, HOLD, TAP, TRIGGER_POS) \
    ZMK_HOLD_TAP(NAME, \
        flavor = "balanced"; \
        tapping-term-ms = <280>; \
        quick-tap-ms = <QUICK_TAP_MS>; \
        require-prior-idle-ms = <150>; \
        bindings = <HOLD>, <TAP>; \
        hold-trigger-key-positions = <TRIGGER_POS>; \
        hold-trigger-on-release; \
    )
#define ZMK_COMBO_8(NAME, TAP, KEYPOS, LAYERS, COMBO_TERM, COMBO_IDLE, HOLD, SIDE) \
    MAKE_HRM(hm_combo_ ## NAME, &kp, TAP, SIDE THUMBS) \
    ZMK_COMBO_6(NAME, &hm_combo_ ## NAME HOLD 0, KEYPOS, LAYERS, COMBO_TERM, COMBO_IDLE)


#define SIMPLE_MORPH(NAME, MOD, BINDING1, BINDING2) \
    ZMK_MOD_MORPH(NAME, \
        mods = <(MOD_L ## MOD|MOD_R ## MOD)>; \
        bindings = <BINDING1>, <BINDING2>; \
    )


SIMPLE_MORPH(lpar_lt, SFT, &kp LPAR, &kp LT)
SIMPLE_MORPH(rpar_gt, SFT, &kp RPAR, &kp GT)



/ {
    macros {
        switch_to_steno: switch_to_steno {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = 
                <&macro_press &kp E &kp U &kp K &kp N &kp V>,
                <&macro_release &kp E &kp U &kp K &kp N &kp V>,
                <&macro_tap &to STENO> 
                
                ;
        };
        switch_from_steno: switch_from_steno {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = 
                <&macro_press &kp E &kp U &kp K &kp N &kp V>,
                <&macro_release &kp E &kp U &kp K &kp N &kp V>,
                <&macro_tap &to DEFAULT> 
                
                ;
        };
        switch_from_steno_math: switch_from_steno_math {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = 

                <&macro_press &kp E &kp U &kp K &kp T &kp N>,
                <&macro_release &kp E &kp U &kp K &kp T &kp N>,
                <&macro_tap &to DEFAULT>
                
                ;
        };
        switch_from_steno_math_eq: switch_from_steno_math_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = 

                <&macro_press &kp E &kp U &kp K &kp W &kp V>,
                <&macro_release &kp E &kp U &kp K &kp W &kp V>,
                <&macro_tap &to DEFAULT>
                
                ;
        };
    };
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <12 24>;
            bindings = <&switch_from_steno_math_eq>;
        };
    };
        behaviors {
             /omit-if-no-ref/ num_word: num_word {
                compatible = "zmk,behavior-auto-layer";
                #binding-cells = <1>;
                continue-list = <BACKSPACE DELETE DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
                ignore-numbers;
            };
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                //label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &to STENO &kp SQT &kp COMMA &kp DOT &kp P &kp Y   &kp F &kp G  &kp C     &kp R   &kp L    &kp DELETE
   &kp ESC   &kp A &kp O &kp E &kp U &kp I           &kp D &kp H  &kp T     &kp N   &kp S    &kp FSLH
   &switch_to_steno &kp SEMI &kp Q &kp J &kp K &kp X        &kp B &kp M  &kp W     &kp V   &kp Z    &num_word RAISE
                  &to CZECH &lt LOWER BKSP &hm LCTRL TAB           &hm RSFT SPACE &hm RALT RET &tog STENO
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp AMPS   &kp N7      &kp LBKT &kp RBKT &kp PRCNT &kp BSPC
   &kp EXCL   &kp EXCL     &kp MINUS    &kp PLUS     &kp PIPE     &kp EQUAL      &kp HASH   &kp UNDER   &kp LPAR &kp RPAR &kp QMARK &trans
   &kp LSHFT  &kp CARET    &kp GRAVE    &kp ASTRK    &kp BSLH     &kp TILDE      &kp TILDE     &kp DOLLAR  &kp LBRC &kp RBRC &kp AT &trans
                                    &trans     &trans       &trans     &trans  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &trans &trans &kp K &trans &kp J   &trans &trans &trans &trans &trans &trans
   &trans &kp NUMBER_6 &kp NUMBER_4 &kp NUMBER_0 &kp NUMBER_2   &trans      &trans &kp NUMBER_3 &kp NUMBER_1 &kp NUMBER_5 &kp NUMBER_7 &trans
   &kp LSHFT &trans   &trans &kp LS(G)   &kp NUMBER_8   &trans      &trans &kp NUMBER_9 &trans &trans &trans &trans
                             &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &tog NAV  &trans &trans &trans &trans &trans      &trans &trans &trans &trans &trans &trans
   &trans    &trans &trans &trans &trans &trans      &trans &kp LEFT &trans &trans &kp RIGHT &trans
   &kp LSHFT &trans &trans &kp DOWN &kp UP &trans    &trans &trans &trans &trans &trans &trans
                           &trans &trans &trans      &trans &trans &trans
                        >;
                };
                steno_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &to DEFAULT &kp SQT &kp COMMA &kp DOT &kp P &kp Y   &kp F &kp G  &kp C     &kp R   &kp L    &kp DELETE
   &switch_from_steno_math  &kp A &kp O &kp E &kp U &kp I           &kp D &kp H  &kp T     &kp N   &kp S    &kp FSLH
   &switch_from_steno &kp SEMI &kp Q &kp J &kp K &kp X        &kp B &kp M  &kp W     &kp V   &kp Z    &kp BSLH
                  &kp LGUI &kp BKSP &kp TAB           &kp SPACE &kp RET &to CZECH
                        >;
                };
                czech_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &trans &trans &trans &trans &trans &trans              &trans &trans  &trans     &trans   &trans    &trans
   &kp ESC   &cs_ec &cs_sc &cs_cc &cs_zc &cs_ya           &cs_aa &cs_ia  &cs_ea     &cs_oa   &cs_ur    &trans
   &to DEFAULT &trans &trans &trans &cs_ua &cs_nc              &cs_dc &cs_tc  &trans     &trans   &trans    &trans
                  &trans &trans &trans                    &trans &trans &trans
                        >;
                };
        };
};
