#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define NAV     3
#define STENO   4


#include "zmk-helpers/helper.h"

#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left hand
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right hand

#include "combos.dtsi"  // must be sources after HRM-combo hack


/ {
    combos {
        //compatible = "zmk,combos";
        //combo_esc {
        //    timeout-ms = <50>;
        //    key-positions = <16 19>;
        //    bindings = <&num_word>;
        //};
    };
        behaviors {
             /omit-if-no-ref/ num_word: num_word {
                compatible = "zmk,behavior-auto-layer";
                #binding-cells = <1>;
                continue-list = <BACKSPACE DELETE DOT COMMA PLUS MINUS STAR FSLH EQUAL>;
                ignore-numbers;
            };
            hm: homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                //label = "HOMEROW_MODS";
                #binding-cells = <2>;
                tapping-term-ms = <150>;
                quick-tap-ms = <0>;
                flavor = "tap-preferred";
                bindings = <&kp>, <&kp>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &to STENO &kp SQT &kp COMMA &kp DOT &kp P &kp Y   &kp F &kp G  &kp C     &kp R   &kp L    &kp DELETE
   &kp ESC   &kp A &kp O &kp E &kp U &kp I           &kp D &kp H  &kp T     &kp N   &kp S    &kp FSLH
   &kp LSHFT &kp SEMI &kp Q &kp J &kp K &kp X        &kp B &kp M  &kp W     &kp V   &kp Z    &num_word RAISE
                  &kp LGUI &lt LOWER BKSP &hm LCTRL TAB           &hm RSFT SPACE &hm RALT RET &tog STENO
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp AMPS   &kp N7      &kp LBKT &kp RBKT &kp PRCNT &kp BSPC
   &kp EXCL   &kp EXCL     &kp MINUS    &kp PLUS     &kp PIPE     &kp EQUAL      &kp HASH   &kp UNDER   &kp LPAR &kp RPAR &kp QMARK &trans
   &kp LSHFT  &kp CARET    &kp GRAVE    &kp ASTRK    &kp BSLH     &kp TILDE      &kp TILDE     &kp DOLLAR  &kp LBRC &kp RBRC &kp AT &trans
                                    &trans     &trans       &trans     &trans  &trans   &trans
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &trans  &trans &trans &kp K &trans &kp J   &trans &trans &trans &trans &trans &trans
   &trans &kp NUMBER_6 &kp NUMBER_4 &kp NUMBER_0 &kp NUMBER_2   &trans      &trans &kp NUMBER_3 &kp NUMBER_1 &kp NUMBER_5 &kp NUMBER_7 &trans
   &kp LSHFT &trans   &trans &kp LS(G)   &kp NUMBER_8   &trans      &trans &kp NUMBER_9 &trans &trans &trans &trans
                             &trans &trans   &trans   &trans   &trans    &trans
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &tog NAV  &trans &trans &trans &trans &trans      &trans &trans &trans &trans &trans &trans
   &trans    &trans &trans &trans &trans &trans      &trans &kp LEFT &trans &trans &kp RIGHT &trans
   &kp LSHFT &trans &trans &kp DOWN &kp UP &trans    &trans &trans &trans &trans &trans &trans
                           &trans &trans &trans      &trans &trans &trans
                        >;
                };
                steno_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &to DEFAULT &kp SQT &kp COMMA &kp DOT &kp P &kp Y   &kp F &kp G  &kp C     &kp R   &kp L    &kp DELETE
   &kp ESC   &kp A &kp O &kp E &kp U &kp I           &kp D &kp H  &kp T     &kp N   &kp S    &kp FSLH
   &kp LSHFT &kp SEMI &kp Q &kp J &kp K &kp X        &kp B &kp M  &kp W     &kp V   &kp Z    &kp BSLH
                  &kp LGUI &lt LOWER BKSP &hm LCTRL TAB           &hm RSFT SPACE &hm RALT RET &tog STENO
                        >;
                };
        };
};
